Done ######################### :
 ✔ Test Testing @done (18-02-25 19:24)
 ✔ Test Json Serialization @done (18-03-03 16:02)
  ✔ Serialize Inventory @done (18-03-03 16:02)
  ✔ Deserialize Inventory @done (18-03-03 16:02)
  {
   "Item1.Id": 100,
   "Item2.Id": 10;
  }

Inventory:
 ✔ ItemDatabase @done (18-03-03 16:02)
 ✔ Item @done (18-03-03 16:02)
 ✔ On deserialize, re-use non unique items @done (18-03-03 16:02)
 ✔ Weapon @done (18-03-03 16:38)
 ✔ Armour @done (18-03-03 21:05)

Character:
 ✔ "Controller" -> The Character @done (18-03-03 21:06)
 ✔ Serialize @done (18-03-04 10:49)
 ✔ Deserialize @done (18-03-04 10:49)
  ✔ Attributes @done (18-03-03 22:38)
  ✔ Inventory @done (18-03-03 22:38)
  ✔ Skills @done (18-03-04 10:49)
   ✔ SkillDatabase @done (18-03-04 10:49)
  ✔ Equipment @done (18-03-04 10:49)
  ✔ Skills @done (18-03-04 13:36)
 ✔ TestLevel @done (18-03-04 18:27)
 ✔ TestCharacter @done (18-03-04 22:46)
  ✔ StateMachine with Animation @done (18-03-04 22:46)
 ✔ Equipment @done (18-03-10 12:05)
  ✔ WeaponSlot @done (18-03-10 12:05)
  ✔ ArmourSlots @done (18-03-10 12:05)
 ✔ EquippedWeapon: Sword @done (18-03-10 12:05)
 ✔ AttackSkill: "Depends on the Weapon @done (18-03-10 12:05)
  ✔ Protection @done (18-03-10 12:05)
  ✔ Attack @done (18-03-10 14:59)
  ✔ Damage @done (18-03-10 14:53)
  ✔ Defend @done (18-03-10 14:59)
  ✔ ScheduleAttack @done (18-03-10 15:41)
  ✘ Implement Radius in AttackShape calculation @cancelled (18-03-10 15:45)
  ✔ TakenOut @done (18-03-10 16:07)
 ✔ Re-implement States @done (18-03-10 16:07)
  ✔ IdleState @done (18-03-04 15:20)
  ✔ MoveState @done (18-03-04 15:20)
  ✔ ChaseState @done (18-03-04 22:46)
   ✘ unify the rotate to target in states @cancelled (18-03-10 15:45)
   ✔ Enemy @done (18-03-04 22:46)
  ✔ AttackState @done (18-03-10 15:45)
   ✔ AttackShape.PointInArea @done (18-03-05 23:16)
    ✔ Only Attack when the Player clicks @done (18-03-10 15:45)
 ✔ ReceiveXP @done (18-03-10 16:16)
 ✔ Fix Serialization @done (18-03-10 22:49)
  ✔ EnemyTypes @done (18-03-10 16:27)
  ✔ Tags @done (18-03-10 16:31)
  ✔ Aspects @done (18-03-10 16:31)
 ✔ Fix Deserialization @done (18-03-10 22:49)
  ✔ Add AspectDatabase @done (18-03-10 22:49)
 ✔ Serialization Tests @done (18-03-10 22:49)
 ✔ Serialize Tags and Aspects @done (18-03-10 22:49)
 ✔ Aspects @done (18-03-10 22:50)
 ✘ Re-implement Rulebook.SynonymsOf(tag) as ScriptableObject tag database object @cancelled (18-03-10 10:06)
 ✘ Is DestinationRotation necessary? @cancelled (18-03-10 10:06)
 ✔ Signals @done (18-03-11 17:14)
 ✔ Create EditorScript for the GameEvent @done (18-03-11 17:14)
 ✔ Is the list of Characters on BaseCharacter necessary? @done (18-03-11 18:30)
 ✔ Create RuntimeList for Players @done (18-03-11 18:30)
 ✔ Create RuntimeList for Enemies @done (18-03-11 18:30)
 ✔ EnemyStates @done (18-03-11 19:47)
  ✔ Idle @done (18-03-11 19:47)
  ✔ Chase @done (18-03-11 19:47)
 ✔ MarkedEnemy @done (18-03-11 20:38)
 ✔ Pushing of Characters on NavMesh? @done (18-03-11 20:38)
 ✔ Copy UIs from First Project @done (18-03-12 21:03)
 ✔ SlotView @done (18-03-12 22:32)
 ✔ Slot @done (18-03-12 22:32)
 ✔ SlottableItem @done (18-03-12 22:33)
 ✔ Inventory : SlotView @done (18-03-12 22:33)
 ✔ Inventory @done (18-03-18 13:57)
  ✔ Signal from Inventory to UI @done (18-03-18 13:32)
  ✘ Signal from UI to Inventory @cancelled (18-03-18 13:56)

Doing ######################### :
 ✔ InventoryUI @done (18-03-18 15:57)
 ✔ Loot @done (18-03-18 16:16)
  ✔ PickUp Loot @done (18-03-18 16:16)
 ✔ GameEventsLogger @done (18-03-24 12:58)
 ✔ EventLogger as SO @done (18-03-24 13:47)
  ✔ enable, disable event types @done (18-03-24 13:47)
 ✔ Make all the tests pass @done (18-03-24 15:11)
 ✔ Catch up with Serialization @done (18-03-24 17:29)
 ✔ Visuals for equipped items @done (18-03-24 18:26)
 ✔ Initialize the Character in the beginning? @done (18-03-24 18:31)
 ✔ GameEventsLogger @done (18-03-24 18:32)
  ✔ Use Unity Event Logger @done (18-03-24 18:32)
 ✔ UI - PlayerUI @done (18-04-02 19:49)
  ✔ Show with global event @done (18-03-18 16:45)
  ✔ Inventory @done (18-03-24 13:06)
   ✔ Only show, items that are not equipped?, Add an item entry, but do not add a SlottableItem? @done (18-03-24 12:28)
  ✔ Equipment UI @done (18-03-24 17:29)
   ✔ SlotView get Slot by Name @done (18-03-24 13:05)
   ✔ Find all Slots already in the view and add them to the view first @done (18-03-24 12:28)
   ✔ Implement item type blocking @done (18-03-24 13:11)
   ✔ Callback when euipped @done (18-03-24 17:28)
 ✔ GameController @done (18-04-02 19:30)
  ✔ MainMenu @done (18-03-29 23:04)
  ✔ LoadScene @done (18-03-29 23:04)
  ✔ SwitchScene @done (18-03-30 08:55)
   ✔ Prepare the TestScene2 @done (18-03-30 08:55)
 ✔ have it as an optional singleton? @done (18-04-02 18:24)
 ✔ levelSwitchUI @done (18-04-02 18:56)
 ✔ Load the UIs when loading a Level @done (18-04-02 19:30)
 ✔ Fix PlayerUI base class from MonoBehaviour @done (18-04-02 19:32)
 ✔ Initialize the Player from the Stats -> Equipment @done (18-04-02 19:49)
 ✔ If Enemy of Player already in range and attackable, directly switch to AttackState @done (18-04-02 20:00)
 ✔ For Enemies instantiate their own ScriptableObject @done (18-04-02 20:05)
 ✔ Put the character to the correct location when switching levels @done (18-04-02 20:57)
  ✔ SpawnPoint for Netry Point from level by name @done (18-04-02 20:57)
  ✔ NewGame @done (18-04-02 21:16)
  ✔ SaveGame @done (18-04-02 21:51)
  ✔ LoadGame @done (18-04-02 21:51)
 ✔ Does not work @done (18-04-02 22:09)
 ✔ Revise the names of the Events @done (18-04-04 21:53)
   ✔ have different event types @done (18-04-04 21:53)
 ✔ Save/Load the Character on Save/Load @done (18-04-04 22:21)
 ✔ data pipeline for items @done (18-04-07 00:04)
  ✔ weapons @done (18-04-07 00:04)
  ✔ armour @done (18-04-07 00:04)
 ✔ Worldmap @done (18-04-08 19:17)
  ✔ Enter Level after Traveling @done (18-04-08 19:11)
   ✔ Ask if Wants to Enter? @done (18-04-08 19:11)
  ✔ Connection to Worldmap in the Level @done (18-04-08 18:28)
  ✘ Double click to travel directly @cancelled (18-04-08 19:17)
 ✔ Get 7 Heroes Pack @done (18-04-08 21:03)
 ✔ ScriptableAttribute @done (18-04-09 22:32)
  ✔ TestingHealth to Health @done (18-04-09 22:32)
  ✔ StatsView @done (18-04-09 23:12)
   ✔ Health @done (18-04-09 22:32)
   ✔ Image @done (18-04-09 23:12)
 ✔ SaveGame take Level into account @done (18-04-11 21:29)
  ✔ Save Previous Scene Name to the GameData @done (18-04-11 21:29)

 ☐ Stats.OnSkillChanged
  ☐ Connect to SkillsPanel and SkillUI



Backlog ####################### :
 ☐ Avoid the popup of the travel ui
  ☐ Optional default spawn point
 ☐ TargetedEnemyDisplayUI
 ☐ Quests
 ☐ Worldmap on GoogleDrive

 ☐ ProceduralLevel
  ☐ OnEnter: -> Take the data and create the Level

 ☐ WorldmapState ScriptableObject
  ✔ CurrentLocation @done (18-04-08 19:17)
  ☐ CurrentTravelDestination
   ☐ Path
   ☐ Start
   ☐ End
   ☐ Percent
 ☐ OnSceneEnter -> InitializeFromState
 ☐ OnSceneLeave -> SerializeCurrentState to WorldmapState
 ☐ Worldmap Travel interface





 ☐ Test Enemy with bigger radius


 ☐ UI - Event Information

☐ ConnectEvents
 ☐ Slot Rejected Signal
 ☐ Slot Accepted Signal


 ☐ Way to reset the Data on each load
s  ☐ Load from json?


 ☐ GameController
  ☐ New Game
  ☐ SwitchLevel


 ☐ States as ScriptableObjects?

 ☐ Remove EnemyTypes from the Characters


 ☐ GameMaster -> ScriptableObject, referenced by Character etc.
 ☐ ParseNameForTags()? -> Later
 ☐ Consequences? -> Later
 ☐ Stunts -> Later

Character:
 ☐ Stats
  ☐ Stunts

GlobalState:
 ☐ Variables
 ☐ Support arbitrary data type

Quest System:
 ☐ Quests

Dialogs:
 ☐ Inkle integration

UIs:
 ☐ MainMenuUI
 ☐ PlayerMenuUI
 ☐ HUDMessageUI
 ☐ InventoryUI
 ☐ ExitUI
 ☐ GameOverUI

- Editor --------------------

Data Pipeline:
 ✔ Download data from google drive (python script) @done (18-04-04 23:00)
 ✔ Convert the json data into ScriptableObjects and extend the existing database @done (18-04-04 23:00)
  ✘ Restrictions: @cancelled (18-04-04 23:00)
   ✘ Have an attribute, like "json driven" on the items. If true the item can't be edited, only through the json data workflow @cancelled (18-04-04 23:00)

Location:
 ☐ Build location manually
 ☐ Read from json file
 ☐ Build in Unity at runtime

 ☐ Have a level be a scene with a LevelBuilder in it, referencing a json file (or not) and executing the level building if it has a json file in it
